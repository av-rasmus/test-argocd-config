global: {}
ingress-nginx:
  nameOverride: ingress-nginx
  fullnameOverride: ingress-nginx
  controller:
    admissionWebhooks:
      enabled: false
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 6
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50
    priorityClassName: system-cluster-critical
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: "prometheus"
    service:
      annotations:
        "prometheus.io/port": 10254
        "prometheus.io/scrape": true
    resources:
      requests:
        cpu: 500
        memory: 1000Mi
      limits:
        cpu: 2000
        memory: 4000Mi
    config:
      log-format-upstream: '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent", "ingress_namespace": "$namespace" }'
      worker-process: 2
      upstream-keepalive-connections: "300"
      upstream-keepalive-requests: "1000"
      keep-alive: "900"
      keep-alive-requests: "10000"
      max-worker-connections: "65536"
